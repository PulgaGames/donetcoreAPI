// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapicore.Data;

#nullable disable

namespace webapicore.Migrations
{
    [DbContext(typeof(HospitalContext))]
    partial class HospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("modelo.modelos.egreso", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<bool>("borrado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<long>("ingresoid")
                        .HasColumnType("bigint");

                    b.Property<long>("medicoid")
                        .HasColumnType("bigint");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("pacienteid")
                        .HasColumnType("bigint");

                    b.Property<string>("tratamiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ingresoid");

                    b.HasIndex("medicoid");

                    b.HasIndex("pacienteid");

                    b.ToTable("egreso");
                });

            modelBuilder.Entity("modelo.modelos.ingreso", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<bool>("borrado")
                        .HasColumnType("bit");

                    b.Property<string>("diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<long>("medicoid")
                        .HasColumnType("bigint");

                    b.Property<int>("numerocama")
                        .HasColumnType("int");

                    b.Property<int>("numerosala")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("pacienteid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("medicoid");

                    b.HasIndex("pacienteid");

                    b.ToTable("ingreso");
                });

            modelBuilder.Entity("modelo.modelos.medico", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("apellidomat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidopat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("borrado")
                        .HasColumnType("bit");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("esespecialista")
                        .HasColumnType("bit");

                    b.Property<bool>("habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("medico");
                });

            modelBuilder.Entity("modelo.modelos.paciente", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("apellidomar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidopat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("borrado")
                        .HasColumnType("bit");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("paciente");
                });

            modelBuilder.Entity("modelo.modelos.egreso", b =>
                {
                    b.HasOne("modelo.modelos.ingreso", "ingreso")
                        .WithMany("egreso")
                        .HasForeignKey("ingresoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("modelo.modelos.medico", "medico")
                        .WithMany("egreso")
                        .HasForeignKey("medicoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("modelo.modelos.paciente", "paciente")
                        .WithMany("egreso")
                        .HasForeignKey("pacienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingreso");

                    b.Navigation("medico");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("modelo.modelos.ingreso", b =>
                {
                    b.HasOne("modelo.modelos.medico", "medico")
                        .WithMany("ingreso")
                        .HasForeignKey("medicoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("modelo.modelos.paciente", "paciente")
                        .WithMany("ingreso")
                        .HasForeignKey("pacienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medico");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("modelo.modelos.ingreso", b =>
                {
                    b.Navigation("egreso");
                });

            modelBuilder.Entity("modelo.modelos.medico", b =>
                {
                    b.Navigation("egreso");

                    b.Navigation("ingreso");
                });

            modelBuilder.Entity("modelo.modelos.paciente", b =>
                {
                    b.Navigation("egreso");

                    b.Navigation("ingreso");
                });
#pragma warning restore 612, 618
        }
    }
}
